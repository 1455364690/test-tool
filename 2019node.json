[{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 isEmpty ()Z public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e20 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e3 equals (LObject;)Z public Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e44 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e79 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e30 addEdge (LWeighted;)V public EdgeQueueMap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s12e42 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s56e81 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s41e65 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s214e221 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s108e140 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 competesWith (LSet;)LPredicate; public static Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e47 equals (LObject;)Z public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s79e102 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 singletons (LCollection;)LPartition; public static Partition.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e48 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e21 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e88 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e50 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e83 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e33 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e99 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s19e34 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s136e149 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e38 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e5 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e21 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s65e81 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e38 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e107 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e16 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s139e145 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s76e135 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e15 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e64 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e41 equals (LObject;)Z public Pair.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e34 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s35e45 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s74e80 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e52 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e31 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s141e171 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s68e75 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e45 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s123e152 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e72 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Pair.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e17 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e36 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e61 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e28 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 toString ()LString; public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-1-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-3-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-5-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-7-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-9-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-11-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-13-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-15-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-17-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-19-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-21-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-23-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-25-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-27-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-29-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-31-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-33-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-35-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-37-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-39-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-41-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-43-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-45-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-47-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-49-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-51-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-53-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-55-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-57-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-59-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-61-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-63-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-65-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-67-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-69-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-71-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-73-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-75-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-77-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-79-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-81-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-83-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-85-peek() : E",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-87-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-89-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-91-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-93-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-95-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-97-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-99-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-101-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-103-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-105-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-107-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-109-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-111-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-113-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-115-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-117-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-119-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-121-componentOf(V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-123-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-125-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-127-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-129-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-131-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-133-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-135-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-137-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-139-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_4",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_7",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_8",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_9",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_11",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_12",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_13",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_14",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_16",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_18",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_20",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_22",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_24",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_26",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_28",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_30",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_32",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_34",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_36",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_37",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_39",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_41",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_43",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_45",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_47",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_49",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_51",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_53",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_55",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_57",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_59",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_61",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_KBestArborescences.java_63",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_1",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_3",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_4",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_6",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_7",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_8",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_10",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Pair.java_12",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_1",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_7",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_9",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_10",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_12",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_14",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_16",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciQueue.java_18",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_5",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_6",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_8",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_9",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_10",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_12",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Weighted.java_14",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_1",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_3",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_5",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_7",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_9",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_11",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_13",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_14",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_16",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_17",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_19",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_21",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_22",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_SparseWeightedGraph.java_24",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_WeightedGraph.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_WeightedGraph.java_3",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_WeightedGraph.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_WeightedGraph.java_7",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_3",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_5",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_7",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_9",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_11",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_12",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_14",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_15",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_17",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_19",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_20",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_22",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_24",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_26",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_28",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_29",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Partition.java_31",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_3",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_7",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_8",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_10",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_12",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_14",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_16",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_18",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_20",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_22",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_24",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_26",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_27",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_29",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_31",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_33",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_35",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_36",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_EdgeQueueMap.java_38",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_1",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_5",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_7",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_9",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_11",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_13",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_15",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_17",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_18",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_19",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_21",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_23",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_25",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_27",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_29",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_30",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_32",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_34",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_36",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_38",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Edge.java_40",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_7",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_8",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_9",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_11",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_12",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_13",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_15",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_17",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_18",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_20",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_22",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_23",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_25",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_26",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_27",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_29",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_31",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_33",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_35",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_36",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_38",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_40",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_42",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_44",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_46",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_48",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_50",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_52",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_54",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_56",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_58",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_60",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_61",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_63",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_65",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_67",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_69",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_71",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_72",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_74",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_75",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_77",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_78",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_79",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_81",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_83",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_85",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_87",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_89",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_91",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_93",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_95",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_97",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_99",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_101",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_102",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_104",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_105",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_107",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_108",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_FibonacciHeap.java_110",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ExclusiveEdge.java_1",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ExclusiveEdge.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ExclusiveEdge.java_5",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_6",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_7",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_9",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_11",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_13",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_14",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_16",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_17",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_18",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_20",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_21",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_22",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_Arborescence.java_24",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_1",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_2",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_4",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_5",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_6",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_8",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_10",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_12",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_14",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_15",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_16",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_18",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_20",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_21",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_23",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_24",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_25",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_DenseWeightedGraph.java_27",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_1",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_3",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_5",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_7",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_9",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_11",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_13",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_15",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_17",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_19",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_21",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_23",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_25",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_27",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_29",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_31",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_33",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_35",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_37",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_39",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_41",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_43",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_45",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_47",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_49",
        "ifCatch":true,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_51",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"mutation_ChuLiuEdmonds.java_53",
        "ifCatch":false,
        "userIds":[99222],
        "category":"mutation",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$48 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s72e74 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$6 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$17 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e38 apply (LEdge;)Z public Edge$2.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.unlinkFromNeighbors (LEntry;)V private static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 hashCode ()I public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s84e92 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 equals (LObject;)Z public Arborescence.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.getCycle (LWeighted;)LList; private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$11 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$5 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$33 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.mergeLists (LOptional;LOptional;)LOptional; private$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e33 contains (LEdge;)Z public Arborescence.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$18 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ExclusiveEdge.java.compareTo (LExclusiveEdge;)I public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$14 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e8 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$10 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s92e103 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e45 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e67 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e34 pollOption ()LOptional; public FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s74e80 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e19 <init> (LArrayList;LMap;[[D)V private DenseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$26 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s52e52 equals (LObject;)Z public Weighted.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$41 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s59e68 singletons (LCollection;)LPartition; public static Partition.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e42 apply (LEdge;)Z public Edge$2.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$15 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$7 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e38 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$55 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e67 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$5 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.getNodes ()LSet; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e21 hashCode ()I public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s102e111 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s5e11 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.toString ()LString; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s146e153 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 contains (LEdge;)Z public Arborescence.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e13 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$10 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e71 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s141e171 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e48 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.equals (LObject;)Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$62 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge$2.java.apply (LEdge;)Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s139e145 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s48e57 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e58 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s68e75 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$69 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Pair.java.toString ()LString; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e48 compareTo (LWeighted;)I public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e15 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s73e76 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s74e80 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 popBestEdge ()LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$9 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s57e73 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e99 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.merge (LFibonacciHeap;LFibonacciHeap;)LFibonacciHeap; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge ()LOptional; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e82 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$12 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$19 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e45 competesWith (LSet;)LPredicate; public static Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 getNodes ()LSet; public Partition.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$9 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s160e160 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e21 hashCode ()I public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e58 singletons (LCollection;)LPartition; public static Partition.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s41e65 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e61 equals (LObject;)Z public Arborescence.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.addEdge (LExclusiveEdge;)LOptional; public$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$65 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.equals (LObject;)Z public$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s183e198 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e23 toString ()LString; public Arborescence.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s44e84 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 iterator ()LIterator; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$19 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e52 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciQueue.java.create (LComparator;)LFibonacciQueue; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e24 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e34 pollOption ()LOptional; public FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$72 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 apply (LEdge;)Z public Edge$2.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$12 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e23 toString ()LString; public Arborescence.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e39 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e38 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e14 isEmpty ()Z public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e11 compareTo (LExclusiveEdge;)I public ExclusiveEdge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$12 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e45 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s156e158 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;)LSparseWeightedGraph; public static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e27 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Pair.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$14 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$38 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e47 equals (LObject;)Z public Weighted.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 getNodes ()LCollection; public DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$11 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s141e171 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$7 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.equals (LObject;)Z public$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$8 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$58 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$36 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s4e5 equals (LObject;)Z public Edge.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.toString ()LString; public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e66 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e25 toString ()LString; public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Partition.java.getNodes ()LSet; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 isEmpty ()Z public FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$5 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ExclusiveEdge.java.of (LEdge;D)LExclusiveEdge; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e58 singletons (LCollection;)LPartition; public static Partition.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e27 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$29 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s82e93 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e50 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.getCycle (LEntry;)LLinkedList; private$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s113e115 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s56e81 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e50 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s136e149 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Pair.java.hashCode ()I public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s57e73 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.competesWith (LSet;)LPredicate; public static$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e49 addEdge (LWeighted;)V public EdgeQueueMap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$7 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Partition.java.singletons (LCollection;)LPartition; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$30 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e30 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.isIn (LSet;)LPredicate; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s76e135 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.equals (LObject;)Z public$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$23 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 <init> (LMap;LMap;)V private Partition.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s41e65 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s108e140 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$19 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 isAutoCycle ()LPredicate; public static Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.clear ()V public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e61 equals (LObject;)Z public Arborescence.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s136e149 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 equals (LObject;)Z public Arborescence.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s97e101 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ExclusiveEdge.java.of (LEdge;LList;D)LExclusiveEdge; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s37e46 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$18 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e3 equals (LObject;)Z public Edge.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciQueue.java.size ()I public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s56e81 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$52 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$30 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.<init> (LComparator;)V private$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.equals (LObject;)Z public$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$45 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s41e65 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$9 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.competesWith (LSet;)LPredicate; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s57e73 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s5e11 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 create (LComparator;)LFibonacciHeap; public static FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e22 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e61 equals (LObject;)Z public Arborescence.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 of (LImmutableMap;)LArborescence; public static Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 equals (LObject;)Z public Arborescence.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s48e51 equals (LObject;)Z public Weighted.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$20 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.isEmpty ()Z public$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e78 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$23 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s159e160 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$4 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e104 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e41 equals (LObject;)Z public Pair.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s89e101 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e23 equals (LObject;)Z public Arborescence.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e46 equals (LObject;)Z public Pair.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s81e91 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s108e140 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$20 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s214e221 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s199e210 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s154e159 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.toString ()LString; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 apply (LEdge;)Z public Edge$2.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$18 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s99e107 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s83e95 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e71 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s114e134 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap.java.<init> (LPartition;)V$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e31 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e99 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e107 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$13 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$15 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e76 toString ()LString; public Arborescence.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$20 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e49 addEdge (LWeighted;)V public EdgeQueueMap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.equals (LObject;)Z public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.<init> (LArrayList;LMap;[[D)V private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.mergeLists (LOptional;LOptional;)LOptional; private$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 <init> (LImmutableMap;)V private Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$7 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e25 <init> (LEdge;LWeighted;LSet;LSet;)V public KBestArborescences$SubsetOfSolutions.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s34e37 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s146e153 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.setParent (LEntry;LEntry;)LEntry; private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$15 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s66e68 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e104 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s35e52 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s85e86 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge$2.java.apply (LEdge;)Z public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s32e40 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$25 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s53e61 pollOption ()LOptional; public FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s123e152 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$8 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$75 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.toString ()LString; public$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e72 equals (LObject;)Z public Arborescence.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$18 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e23 singletons (LCollection;)LPartition; public static Partition.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$11 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s57e73 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$12 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$6 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.<init> (LPartition;LPartition;LMap;LLinkedList;LEdgeQueueMap;D)V private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$9 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e23 toString ()LString; public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$18 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$32 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s37e46 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 pollOption ()LOptional; public FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s214e221 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s49e56 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$68 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s102e111 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Weighted.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e57 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e50 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s123e152 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.create ()LFibonacciHeap; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e57 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$5 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$7 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.getCycle (LEntry;)LLinkedList; private$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.<init> (LSet;LMap;)V private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e3 equals (LObject;)Z public Edge.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge$3.java.apply (LEdge;)Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s53e55 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s72e113 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s158e240 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$18 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.getCycle (LWeighted;)LList; private$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s108e140 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s56e81 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s116e136 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$11 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s5e11 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e83 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e23 singletons (LCollection;)LPartition; public static Partition.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$19 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 equals (LObject;)Z public Arborescence.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.equals (LObject;)Z public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e78 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$12 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s8e17 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$51 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.remove (LEntry;)V public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$17 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e82 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e105 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.equals (LObject;)Z public$PrimePath$4 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 contains (LEdge;)Z public Arborescence.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e44 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e17 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$70 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e113 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge$2.java.apply (LEdge;)Z public$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$10 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e27 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$31 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 of (LEdge;LList;D)LExclusiveEdge; public static ExclusiveEdge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$9 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e16 equals (LObject;)Z public Edge.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.toString ()LString; public$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e10 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Partition.java.singletons (LCollection;)LPartition; public static$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$50 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e50 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e105 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s45e95 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Partition.java.singletons (LCollection;)LPartition; public static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$24 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e8 equals (LObject;)Z public Weighted.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s29e37 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e10 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.getCycle (LEntry;)LLinkedList; private$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;)LSparseWeightedGraph; public static$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge$4.java.apply (LEdge;)Z public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$44 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$37 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e83 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e83 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s48e51 equals (LObject;)Z public Weighted.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$8 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e18 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s136e149 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Pair.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e99 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e88 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e88 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$31 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$14 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.mergeLists (LOptional;LOptional;)LOptional; private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$12 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s42e45 equals (LObject;)Z public Pair.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$17 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s35e45 equals (LObject;)Z public Edge.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$56 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$24 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e107 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e103 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e27 <init> (LComparator;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 apply (LEdge;)Z public Edge$4.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;LSet;LSet;)LWeighted; static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 <init> (LSet;LMap;)V private SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e48 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e72 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$49 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s199e210 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s43e43 apply (LEdge;)Z public Edge$2.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s82e95 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 equals (LObject;)Z public Arborescence.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$5 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$14 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s114e134 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 getNodes ()LSet; public ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$17 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$17 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.comparator ()LComparator; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 size ()I public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e22 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.contains (LEdge;)Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 comparator ()LComparator; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s106e130 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s65e81 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$63 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e17 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s82e93 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.siblingsAndBelow (LOptional;)LIterator; private$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e52 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e38 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$22 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e24 from ([[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$29 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e24 hashCode ()I public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$7 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.contains (LEdge;)Z public$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e17 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e138 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$74 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e50 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$60 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$9 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.empty ()LArborescence; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s42e45 equals (LObject;)Z public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e43 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$15 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s59e62 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s141e171 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$67 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$14 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e45 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e103 pollOption ()LOptional; public FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.getNodes ()LCollection; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s79e102 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s21e21 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s103e109 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.iterator ()LIterator; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$7 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s245e248 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e13 isEmpty ()Z public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s80e99 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e30 addEdge (LWeighted;)V public EdgeQueueMap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Weighted.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Partition.java.<init> (LMap;LMap;)V private$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$10 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s172e182 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e98 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$53 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e42 setParent (LEntry;LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e113 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s53e61 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e98 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e8 equals (LObject;)Z public Pair.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciQueue.java.comparator ()LComparator; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$12 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.equals (LObject;)Z public$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e66 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s50e85 addEdge (LWeighted;)V public EdgeQueueMap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.isEmpty ()Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;)LSparseWeightedGraph; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s53e55 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$17 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$43 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$35 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences$SubsetOfSolutions.java.<init> (LEdge;LWeighted;LSet;LSet;)V public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e22 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 size ()I public FibonacciQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$21 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$28 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e45 competesWith (LSet;)LPredicate; public static Edge.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s12e42 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 competesWith (LSet;)LPredicate; public static Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$9 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e71 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s65e81 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$12 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e44 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s154e159 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e79 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e99 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s43e50 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s83e95 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 isEmpty ()Z public FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s75e89 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.equals (LObject;)Z public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.addEdge (LExclusiveEdge;)V public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$15 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e52 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e61 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e13 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$14 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Pair.java.equals (LObject;)Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$36 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s81e91 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s19e34 equals (LObject;)Z public Edge.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s77e96 toString ()LString; public Arborescence.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$10 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s103e109 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Weighted.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 iterator ()LIterator; public FibonacciQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s123e152 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e16 equals (LObject;)Z public Edge.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s89e101 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$10 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e38 apply (LEdge;)Z public Edge$2.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s214e221 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e21 equals (LObject;)Z public Arborescence.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$19 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$64 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s153e155 consolidate (LEntry;)LEntry; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$10 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$25 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s131e135 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$9 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.isAutoCycle ()LPredicate; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$32 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s19e34 equals (LObject;)Z public Edge.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$57 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.size ()I public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$11 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s29e37 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$26 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$71 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 create ()LFibonacciHeap; public static FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e64 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e49 equals (LObject;)Z public Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.equals (LObject;)Z public$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.create (LComparator;)LFibonacciHeap; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap.java.addEdge (LWeighted;)V public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$18 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s23e47 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e79 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e30 addEdge (LWeighted;)V public EdgeQueueMap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e47 equals (LObject;)Z public Weighted.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s139e145 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e67 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.getNodes ()LCollection; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 competesWith (LSet;)LPredicate; public static Edge.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s74e80 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s32e40 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.getCycle (LWeighted;)LList; private$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$9 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciQueue.java.create ()LFibonacciQueue; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Pair.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e64 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e19 competesWith (LSet;)LPredicate; public static Edge.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.peekOption ()LOptional; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e17 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciQueue.java.<init> (LFibonacciHeap;)V private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e58 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s100e113 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.equals (LObject;)Z public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s153e155 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e25 toString ()LString; public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s79e102 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e24 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Pair.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e14 isEmpty ()Z public FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s35e52 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 pollOption ()LOptional; public FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$10 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s25e26 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e25 toString ()LString; public Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Weighted.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.<init> (LImmutableMap;)V private$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.of (LImmutableMap;)LArborescence; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s38e61 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 empty ()LArborescence; public static Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.hashCode ()I public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Pair.java.equals (LObject;)Z public$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e36 unlinkFromNeighbors (LEntry;)V private static FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s222e244 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$35 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$1 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e12 clear ()V public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s8e17 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$27 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e15 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e17 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e78 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s19e34 equals (LObject;)Z public Edge.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s94e96 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e138 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.addEdge (LExclusiveEdge;)LOptional; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s113e115 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$42 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$13 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s84e92 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$21 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$11 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s47e68 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s66e68 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e59 competesWith (LSet;)LPredicate; public static Edge.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e105 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e34 pollOption ()LOptional; public FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s29e37 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$73 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s100e103 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e57 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.mergeLists (LOptional;LOptional;)LOptional; private$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s92e103 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static$PrimePath$5 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s67e72 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 getNodes ()LCollection; public SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Partition.java.singletons (LCollection;)LPartition; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$28 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$15 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e11 create (LComparator;)LFibonacciQueue; public static FibonacciQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$16 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e72 equals (LObject;)Z public Arborescence.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.addEdge (LExclusiveEdge;)V public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e42 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$15 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.toString ()LString; public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s37e46 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.equals (LObject;)Z public$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e103 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s100e103 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciQueue.java.iterator ()LIterator; public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e38 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$19 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.hashCode ()I public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s114e126 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s17e18 equals (LObject;)Z public Edge.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Pair.java.equals (LObject;)Z public$PrimePath$3 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$40 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 create ()LFibonacciQueue; public static FibonacciQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$33 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$14 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.WeightedGraph.java.filterEdges (LPredicate;)LWeightedGraph; public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e30 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e56 merge (LFibonacciHeap;LFibonacciHeap;)LFibonacciHeap; public static FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e24 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e43 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$7 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.competesWith (LSet;)LPredicate; public static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s68e75 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.contains (LEdge;)Z public$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s106e130 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.hashCode ()I public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e16 equals (LObject;)Z public Edge.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$61 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$47 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s73e76 equals (LObject;)Z public Arborescence.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e23 singletons (LCollection;)LPartition; public static Partition.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s48e57 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap.java.addEdge (LWeighted;)V public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e103 pollOption ()LOptional; public FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from ([[D)LDenseWeightedGraph; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s38e61 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s38e38 contains (LEdge;)Z public Arborescence.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$15 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$6 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e38 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e33 contains (LEdge;)Z public Arborescence.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s48e57 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 comparator ()LComparator; public FibonacciQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$54 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e37 <init> (LPartition;LPartition;LMap;LLinkedList;LEdgeQueueMap;D)V private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e24 getMaxArborescence (LWeightedGraph;LSet;LSet;)LWeighted; static ChuLiuEdmonds.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.competesWith (LSet;)LPredicate; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$7 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s76e135 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e13 isEmpty ()Z public FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 peekOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$17 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s29e30 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e20 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$14 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 isIn (LSet;)LPredicate; public static Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 of (LEdge;D)LExclusiveEdge; public static ExclusiveEdge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.getCycle (LWeighted;)LList; private$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e24 remove (LEntry;)V public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.recoverBestArborescence ()LWeighted; private$PrimePath$3 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s8e17 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e21 <init> (LFibonacciHeap;)V private FibonacciQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;)LSparseWeightedGraph; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e18 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge.java.equals (LObject;)Z public$PrimePath$4 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Pair.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s211e213 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e88 consolidate (LEntry;)LEntry; private FibonacciHeap.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e49 equals (LObject;)Z public Edge.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s5e6 equals (LObject;)Z public Arborescence.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s79e102 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s53e61 pollOption ()LOptional; public FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$39 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.EdgeQueueMap$EdgeQueue.java.popBestEdge (LArborescence;)LOptional; public$PrimePath$11 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s110e112 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e28 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Weighted.java.compareTo (LWeighted;)I public$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e11 apply (LEdge;)Z public Edge$1.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e21 equals (LObject;)Z public Arborescence.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$7 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e28 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s50e50 equals (LObject;)Z public Edge.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds.java.getMaxArborescence (LWeightedGraph;)LWeighted; public static$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s93e95 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$22 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e15 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s35e45 equals (LObject;)Z public Edge.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$46 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$8 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s47e68 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e38 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.DenseWeightedGraph.java.from (LIterable;[[D)LDenseWeightedGraph; public static$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e41 equals (LObject;)Z public Pair.java condition true",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s183e198 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s34e37 contains (LEdge;)Z public Arborescence.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.SparseWeightedGraph.java.from (LIterable;LIterable;)LSparseWeightedGraph; public static$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e138 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e107 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$59 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$66 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s44e84 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s139e145 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.pollOption ()LOptional; public$PrimePath$7 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e16 <init> (LPartition;)V EdgeQueueMap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e61 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Weighted.java condition false",
        "ifCatch":true,
        "userIds":[99222],
        "category":"condition",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s183e198 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e76 toString ()LString; public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$34 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Edge$1.java.apply (LEdge;)Z public$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getKBestArborescences (LWeightedGraph;I)LList; private static$PrimePath$8 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Arborescence.java.equals (LObject;)Z public$PrimePath$1 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.cutAndMakeRoot (LEntry;)V private$PrimePath$7 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$5 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ExclusiveEdge.java.<init> (LEdge;LList;D)V private$PrimePath$0 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.Pair.java.equals (LObject;)Z public$PrimePath$2 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$2 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.consolidate (LEntry;)LEntry; private$PrimePath$34 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.FibonacciHeap.java.siblingsAndBelow (LOptional;)LIterator; private$PrimePath$0 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e19 <init> (LEdge;LList;D)V private ExclusiveEdge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s77e77 equals (LObject;)Z public Arborescence.java branch",
        "ifCatch":true,
        "userIds":[99222],
        "category":"branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e20 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java condition true",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s150e157 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e71 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s12e42 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s12e42 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s172e182 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s241e242 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java branch",
        "ifCatch":false,
        "userIds":[99222],
        "category":"branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e28 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java condition false",
        "ifCatch":false,
        "userIds":[99222],
        "category":"condition",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s23e47 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e43 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.ChuLiuEdmonds$PartialSolution.java.initialize (LWeightedGraph;)LPartialSolution; public static$PrimePath$11 prime_path",
        "ifCatch":false,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"net.mooctest.KBestArborescences.java.getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static$PrimePath$27 prime_path",
        "ifCatch":true,
        "userIds":[99222],
        "category":"prime_path",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e11 apply (LEdge;)Z public Edge$3.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-1-Arborescence(ImmutableMap<V, V>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-1-Arborescence(ImmutableMap<V, V>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-2-of(ImmutableMap<T, T>) : Arborescence<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-2-of(ImmutableMap<T, T>) : Arborescence<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-3-empty() : Arborescence<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-3-empty() : Arborescence<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-4-contains(Edge<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-4-contains(Edge<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-5-contains(Edge<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-5-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-6-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-7-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-8-toString() : String",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-9-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-6-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-10-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-11-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-12-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-13-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-14-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-15-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-16-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-17-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-7-hashCode() : int",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-18-hashCode() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-8-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-19-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-20-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-21-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-22-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-23-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-24-PartialSolution(Partition<V>,Partition<V>,Map<V, Weighted<Edge<V>>>,LinkedList<ExclusiveEdge<V>>,EdgeQueueMap<V>,double)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-9-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-25-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-26-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-27-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-28-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-29-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-30-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-31-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-32-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-33-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-10-getNodes() : Set<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-34-getNodes() : Set<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-11-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-35-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-36-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-37-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-38-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-39-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-40-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-41-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-42-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-43-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-44-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-45-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-46-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-47-merge(Weighted<Edge<V>>,EdgeQueueMap<V>) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-12-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-48-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-49-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-50-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-51-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-52-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-53-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-54-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-13-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-55-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-56-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-57-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-58-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-59-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-60-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-61-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-62-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-63-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-64-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-65-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-14-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-66-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-67-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-68-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-69-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-70-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-71-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-72-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-73-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-74-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-15-popBestEdge(V) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-75-popBestEdge(V) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-16-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-76-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-17-getMaxArborescence(WeightedGraph<V>,V) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-77-getMaxArborescence(WeightedGraph<V>,V) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-18-getMaxArborescence(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-78-getMaxArborescence(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-19-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-79-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-80-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-81-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-82-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-83-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-84-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-85-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-86-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-87-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-88-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-89-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-90-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-20-DenseWeightedGraph(ArrayList<V>,Map<V, Integer>,double[][])",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-91-DenseWeightedGraph(ArrayList<V>,Map<V, Integer>,double[][])",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-92-DenseWeightedGraph(ArrayList<V>,Map<V, Integer>,double[][])",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-93-DenseWeightedGraph(ArrayList<V>,Map<V, Integer>,double[][])",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-21-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-94-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-95-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-96-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-97-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-98-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-99-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-22-from(double[][]) : DenseWeightedGraph<Integer>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-100-from(double[][]) : DenseWeightedGraph<Integer>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-101-from(double[][]) : DenseWeightedGraph<Integer>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-23-getNodes() : Collection<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-102-getNodes() : Collection<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-24-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-103-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-104-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-105-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-25-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-106-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-107-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-108-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-109-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-110-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-111-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-112-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-26-Edge(V,V)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-113-Edge(V,V)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-114-Edge(V,V)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-27-EdgeBuilder(V)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-115-EdgeBuilder(V)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-28-to(V) : Edge<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-116-to(V) : Edge<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-29-from(T) : EdgeBuilder<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-117-from(T) : EdgeBuilder<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-30-hashCode() : int",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-118-hashCode() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-31-toString() : String",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-119-toString() : String",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-32-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-120-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-121-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-122-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-123-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-124-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-125-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-33-hasDestination(T) : Predicate<Edge<T>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-126-hasDestination(T) : Predicate<Edge<T>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-34-apply(Edge<T>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-127-apply(Edge<T>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-35-competesWith(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-128-competesWith(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-129-competesWith(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-130-competesWith(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-131-competesWith(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-132-competesWith(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-36-apply(Edge<T>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-133-apply(Edge<T>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-37-isAutoCycle() : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-134-isAutoCycle() : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-38-apply(Edge<T>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-135-apply(Edge<T>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-39-isIn(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-136-isIn(Set<Edge<T>>) : Predicate<Edge<T>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-40-apply(Edge<T>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-137-apply(Edge<T>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-41-EdgeQueue(V,Partition<V>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-138-EdgeQueue(V,Partition<V>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-139-EdgeQueue(V,Partition<V>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-140-EdgeQueue(V,Partition<V>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-42-create(T,Partition<T>) : EdgeQueue<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-141-create(T,Partition<T>) : EdgeQueue<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-43-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-142-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-143-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-144-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-44-popBestEdge() : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-145-popBestEdge() : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-45-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-146-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-147-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-148-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-149-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-150-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-151-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-152-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-153-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-154-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-46-EdgeQueueMap(Partition<V>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-155-EdgeQueueMap(Partition<V>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-156-EdgeQueueMap(Partition<V>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-47-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-157-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-158-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-159-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-160-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-161-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-48-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-162-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-163-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-164-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-49-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-165-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-166-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-167-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-168-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-169-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-170-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-171-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-172-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-173-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-174-merge(V,Iterable<Pair<EdgeQueue<V>, Weighted<Edge<V>>>>) : EdgeQueue",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-50-ExclusiveEdge(Edge<V>,List<Edge<V>>,double)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-175-ExclusiveEdge(Edge<V>,List<Edge<V>>,double)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-176-ExclusiveEdge(Edge<V>,List<Edge<V>>,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-177-ExclusiveEdge(Edge<V>,List<Edge<V>>,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-51-of(Edge<T>,List<Edge<T>>,double) : ExclusiveEdge<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-178-of(Edge<T>,List<Edge<T>>,double) : ExclusiveEdge<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-52-of(Edge<T>,double) : ExclusiveEdge<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-179-of(Edge<T>,double) : ExclusiveEdge<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-53-compareTo(ExclusiveEdge<V>) : int",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-180-compareTo(ExclusiveEdge<V>) : int",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-54-Entry(V,P)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-181-Entry(V,P)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-182-Entry(V,P)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-183-Entry(V,P)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-55-FibonacciHeap(Comparator<? super P>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-184-FibonacciHeap(Comparator<? super P>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-56-create(Comparator<? super C>) : FibonacciHeap<T,C>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-185-create(Comparator<? super C>) : FibonacciHeap<T,C>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-57-create() : FibonacciHeap<T,C>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-186-create() : FibonacciHeap<T,C>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-58-comparator() : Comparator<? super P>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-187-comparator() : Comparator<? super P>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-59-clear() : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-188-clear() : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-189-clear() : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-60-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-190-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-191-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-192-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-193-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-194-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-195-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-196-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-61-remove(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-197-remove(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-198-remove(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-199-remove(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-200-remove(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-62-isEmpty() : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-201-isEmpty() : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-63-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-202-add(V,P) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-203-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-204-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-205-add(V,P) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-206-add(V,P) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-207-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-208-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-209-add(V,P) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-64-peekOption() : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-210-peekOption() : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-65-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-211-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-212-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-213-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-214-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-215-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-216-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-217-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-218-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-219-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-220-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-221-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-222-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-223-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-224-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-66-size() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-225-size() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-67-merge(FibonacciHeap<U,P>,FibonacciHeap<U,P>) : FibonacciHeap<U,P>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-226-merge(FibonacciHeap<U,P>,FibonacciHeap<U,P>) : FibonacciHeap<U,P>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-227-merge(FibonacciHeap<U,P>,FibonacciHeap<U,P>) : FibonacciHeap<U,P>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-228-merge(FibonacciHeap<U,P>,FibonacciHeap<U,P>) : FibonacciHeap<U,P>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-229-merge(FibonacciHeap<U,P>,FibonacciHeap<U,P>) : FibonacciHeap<U,P>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-230-merge(FibonacciHeap<U,P>,FibonacciHeap<U,P>) : FibonacciHeap<U,P>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-68-iterator() : Iterator<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-231-iterator() : Iterator<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-69-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-232-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-233-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-234-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-70-apply(Entry) : Iterator<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-235-apply(Entry) : Iterator<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-71-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-236-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-237-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-238-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-239-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-240-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-241-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-72-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-242-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-243-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-244-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-245-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-246-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-247-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-248-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-249-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-250-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-251-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-252-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-253-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-73-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-254-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-255-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-256-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-257-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-258-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-259-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-260-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-261-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-262-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-263-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-264-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-265-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-266-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-267-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-268-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-269-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-74-setParent(Entry,Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-270-setParent(Entry,Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-271-setParent(Entry,Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-272-setParent(Entry,Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-273-setParent(Entry,Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-274-setParent(Entry,Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-275-setParent(Entry,Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-75-unlinkFromNeighbors(FibonacciHeap.Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-276-unlinkFromNeighbors(FibonacciHeap.Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-277-unlinkFromNeighbors(FibonacciHeap.Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-278-unlinkFromNeighbors(FibonacciHeap.Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-279-unlinkFromNeighbors(FibonacciHeap.Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-76-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-280-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-281-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-282-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-283-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-284-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-285-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-286-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-287-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-288-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-289-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-290-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-291-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-292-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-293-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-77-apply(FibonacciHeap<E, ?>.Entry) : E",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-294-apply(FibonacciHeap<E, ?>.Entry) : E",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-78-FibonacciQueue(FibonacciHeap<E,E>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-295-FibonacciQueue(FibonacciHeap<E,E>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-79-create(Comparator<? super C>) : FibonacciQueue<C>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-296-create(Comparator<? super C>) : FibonacciQueue<C>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-80-create() : FibonacciQueue<C>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-297-create() : FibonacciQueue<C>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-81-comparator() : Comparator<? super E>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-298-comparator() : Comparator<? super E>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-82-peek() : E",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-299-peek() : E",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-300-peek() : E",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-83-offer(E) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-301-offer(E) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-84-poll() : E",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-302-poll() : E",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-85-size() : int",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-303-size() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-86-iterator() : Iterator<E>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-304-iterator() : Iterator<E>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-87-getKBestArborescences(WeightedGraph<V>,V,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-305-getKBestArborescences(WeightedGraph<V>,V,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-88-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-306-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-307-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-308-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-309-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-310-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-311-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-312-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-313-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-314-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-315-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-316-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-317-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-318-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-319-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-320-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-321-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-322-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-323-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-324-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-325-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-89-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-326-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-327-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-328-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-329-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-330-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-331-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-90-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-332-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-333-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-334-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-335-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-336-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-337-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-338-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-339-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-340-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-341-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-342-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-343-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-344-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-345-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-346-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-347-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-348-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-349-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-350-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-351-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-352-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-353-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-354-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-355-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-91-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-356-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-357-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-358-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-359-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-360-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-361-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-92-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-362-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-363-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-364-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-365-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-366-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-367-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-368-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-369-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-93-SubsetOfSolutions(Edge<V>,Weighted<Arborescence<V>>,Set<Edge<V>>,Set<Edge<V>>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-370-SubsetOfSolutions(Edge<V>,Weighted<Arborescence<V>>,Set<Edge<V>>,Set<Edge<V>>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-371-SubsetOfSolutions(Edge<V>,Weighted<Arborescence<V>>,Set<Edge<V>>,Set<Edge<V>>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-372-SubsetOfSolutions(Edge<V>,Weighted<Arborescence<V>>,Set<Edge<V>>,Set<Edge<V>>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-373-SubsetOfSolutions(Edge<V>,Weighted<Arborescence<V>>,Set<Edge<V>>,Set<Edge<V>>)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-94-Pair(T,V)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-374-Pair(T,V)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-375-Pair(T,V)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-95-of(T,V) : Pair<T, V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-376-of(T,V) : Pair<T, V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-96-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-377-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-378-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-379-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-380-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-97-hashCode() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-381-hashCode() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-98-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-382-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-99-Partition(Map<V, V>,Map<V, Integer>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-383-Partition(Map<V, V>,Map<V, Integer>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-384-Partition(Map<V, V>,Map<V, Integer>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-100-singletons(Collection<T>) : Partition<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-385-singletons(Collection<T>) : Partition<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-386-singletons(Collection<T>) : Partition<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-387-singletons(Collection<T>) : Partition<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-388-singletons(Collection<T>) : Partition<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-389-singletons(Collection<T>) : Partition<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-390-singletons(Collection<T>) : Partition<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-101-componentOf(V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-391-componentOf(V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-392-componentOf(V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-393-componentOf(V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-394-componentOf(V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-395-componentOf(V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-102-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-396-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-397-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-398-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-399-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-400-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-401-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-402-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-403-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-404-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-405-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-406-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-407-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-408-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-409-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-410-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-103-sameComponent(V,V) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-411-sameComponent(V,V) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-104-getNodes() : Set<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-412-getNodes() : Set<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-105-SparseWeightedGraph(Set<V>,Map<V, Map<V, Weighted<Edge<V>>>>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-413-SparseWeightedGraph(Set<V>,Map<V, Map<V, Weighted<Edge<V>>>>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-414-SparseWeightedGraph(Set<V>,Map<V, Map<V, Weighted<Edge<V>>>>)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-106-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-415-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-416-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-417-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-418-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-419-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-420-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-107-from(Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-421-from(Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-422-from(Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-423-from(Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-424-from(Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-425-from(Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-108-getNodes() : Collection<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-426-getNodes() : Collection<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-109-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-427-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-428-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-429-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-430-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-431-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-432-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-110-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-433-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-434-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-435-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-111-Weighted(T,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-436-Weighted(T,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-437-Weighted(T,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-438-Weighted(T,double)",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-439-Weighted(T,double)",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-112-weighted(T,double) : Weighted<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-440-weighted(T,double) : Weighted<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-113-compareTo(Weighted<T>) : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-441-compareTo(Weighted<T>) : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-114-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-442-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-443-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-444-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-445-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-115-hashCode() : int",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-446-hashCode() : int",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-116-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-447-toString() : String",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"method-117-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-method",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-448-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-449-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-450-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-451-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-452-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-453-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"statement-454-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-statement",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s114e126 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e39 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s104e138 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s85e86 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s59e62 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e31 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s131e135 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s19e28 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s75e89 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e13 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s59e68 singletons (LCollection;)LPartition; public static Partition.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s4e5 equals (LObject;)Z public Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s110e112 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s116e136 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s43e50 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s77e77 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e30 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s38e38 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s159e160 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s156e158 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s93e95 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s80e99 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s43e43 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s211e213 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s96e99 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e46 equals (LObject;)Z public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e8 equals (LObject;)Z public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s150e157 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s49e56 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s100e113 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s52e52 equals (LObject;)Z public Weighted.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s112e122 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s99e107 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e17 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s29e30 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s222e244 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s72e113 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s5e6 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s77e96 toString ()LString; public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e10 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s21e21 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e8 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s32e40 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s17e18 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s158e240 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s45e95 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s67e72 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s245e248 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e10 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e8 equals (LObject;)Z public Weighted.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s97e101 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s10e13 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e72 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s94e96 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s50e50 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s46e59 competesWith (LSet;)LPredicate; public static Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s72e74 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s25e26 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-2-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-4-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-6-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-8-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-10-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-12-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-14-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-16-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-18-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-20-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-22-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-24-getWeightOf(V,V) : double",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-26-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-28-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-30-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-32-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-34-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-36-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-38-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-40-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-42-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-44-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-46-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-48-decreasePriority(Entry,P) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-50-add(V,P) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-52-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-54-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-56-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-58-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-60-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-62-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-64-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-66-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-68-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-70-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-72-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-74-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-76-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-78-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-80-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-82-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-84-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-86-peek() : E",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-88-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-90-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-92-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-94-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-96-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-98-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-100-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-102-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-104-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-106-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-108-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-110-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-112-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-114-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-116-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-118-seek(ExclusiveEdge<V>,Arborescence<V>,EdgeQueueMap.EdgeQueue<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-120-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-122-componentOf(V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-124-merge(V,V) : V",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-126-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-128-merge(V,V) : V",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-130-from(Iterable<T>,Iterable<Weighted<Edge<T>>>) : SparseWeightedGraph<T>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-132-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-134-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-136-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-138-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-140-filterEdges(Predicate<Edge<V>>) : WeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s47e47 equals (LObject;)Z public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s15e15 isEmpty ()Z public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s78e78 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s44e44 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s53e53 equals (LObject;)Z public Weighted.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s105e105 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s82e95 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s241e242 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e39 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s135e152 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s51e51 equals (LObject;)Z public Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s22e23 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s50e85 addEdge (LWeighted;)V public EdgeQueueMap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s183e198 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s160e160 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    }]