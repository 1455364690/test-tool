[{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 from (LIterable;[[D)LDenseWeightedGraph; public static DenseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Pair.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e8 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 isEmpty ()Z public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e20 addEdge (LExclusiveEdge;)V public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e3 equals (LObject;)Z public Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e44 scoreSubsetOfSolutions (LWeightedGraph;LSet;LSet;LWeighted;)LOptional; static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e79 addEdge (LExclusiveEdge;)LOptional; public ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e15 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 equals (LObject;)Z public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e30 addEdge (LWeighted;)V public EdgeQueueMap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e6 siblingsAndBelow (LOptional;)LIterator; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e9 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s12e42 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s56e81 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s41e65 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s214e221 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s108e140 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s7e10 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 competesWith (LSet;)LPredicate; public static Edge.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e47 equals (LObject;)Z public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s79e102 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 singletons (LCollection;)LPartition; public static Partition.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e48 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e21 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e88 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s20e50 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s58e83 filterEdges (LPredicate;)LWeightedGraph; public WeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e33 contains (LEdge;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e99 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s19e34 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s136e149 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e38 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e5 getCycle (LEntry;)LLinkedList; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e21 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s65e81 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s16e38 apply (LEdge;)Z public Edge$2.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s69e107 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s6e16 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s139e145 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s76e135 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e7 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e15 mergeLists (LOptional;LOptional;)LOptional; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s39e64 popBestEdge (LArborescence;)LOptional; public EdgeQueueMap$EdgeQueue.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Weighted.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s28e41 equals (LObject;)Z public Pair.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s14e34 pollOption ()LOptional; public FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s35e45 equals (LObject;)Z public Edge.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s74e80 cutAndMakeRoot (LEntry;)V private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s31e52 getMaxArborescence (LWeightedGraph;)LWeighted; public static ChuLiuEdmonds.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e31 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s141e171 getNextBestArborescence (LWeightedGraph;LArborescence;)LOptional; private static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 from (LIterable;LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s68e75 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s18e45 recoverBestArborescence ()LWeighted; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e13 getCycle (LWeighted;)LList; private ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s123e152 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s62e72 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s9e27 equals (LObject;)Z public Pair.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e17 consolidate (LEntry;)LEntry; private FibonacciHeap.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e10 from (LIterable;)LSparseWeightedGraph; public static SparseWeightedGraph.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e4 seek (LExclusiveEdge;LArborescence;LEdgeQueue;)LOptional; public static KBestArborescences.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e36 initialize (LWeightedGraph;)LPartialSolution; public static ChuLiuEdmonds$PartialSolution.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s24e61 equals (LObject;)Z public Arborescence.java line",
        "ifCatch":true,
        "userIds":[99222],
        "category":"line",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s11e28 getKBestArborescences (LWeightedGraph;I)LList; private static KBestArborescences.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"s0e14 toString ()LString; public Arborescence.java line",
        "ifCatch":false,
        "userIds":[99222],
        "category":"line",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-1-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-3-equals(Object) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-5-initialize(WeightedGraph<T>) : PartialSolution<T>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-7-getCycle(Weighted<Edge<V>>) : List<Weighted<Edge<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-9-addEdge(ExclusiveEdge<V>) : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-11-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-13-recoverBestArborescence() : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-15-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-17-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-19-getMaxArborescence(WeightedGraph<V>) : Weighted<Arborescence<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-21-from(Iterable<V>,double[][]) : DenseWeightedGraph<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-23-getWeightOf(V,V) : double",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-25-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-27-getIncomingEdges(V) : Collection<Weighted<Edge<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-29-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-31-equals(Object) : boolean",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-33-addEdge(ExclusiveEdge<V>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-35-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-37-popBestEdge(Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-39-addEdge(Weighted<Edge<V>>) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-41-popBestEdge(V,Arborescence<V>) : Optional<ExclusiveEdge<V>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-43-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-45-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-47-decreasePriority(Entry,P) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-49-add(V,P) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-51-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-53-pollOption() : Optional<V>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-55-pollOption() : Optional<V>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-57-siblingsAndBelow(Optional<Entry>) : Iterator<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-59-getCycle(Entry) : LinkedList<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-61-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-63-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-65-mergeLists(Optional<Entry>,Optional<Entry>) : Optional<Entry>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-67-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-69-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-71-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-73-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-75-cutAndMakeRoot(Entry) : void",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-77-cutAndMakeRoot(Entry) : void",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-79-consolidate(Entry) : Entry",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-81-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-83-consolidate(Entry) : Entry",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-85-peek() : E",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-87-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-89-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-91-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-93-getKBestArborescences(WeightedGraph<V>,int) : List<Weighted<Arborescence<V>>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-95-scoreSubsetOfSolutions(WeightedGraph<V>,Set<Edge<V>>,Set<Edge<V>>,Weighted<Arborescence<V>>) : Optional<Weighted<SubsetOfSolutions<V>>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-97-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-99-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-101-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-103-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-105-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-107-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-109-getNextBestArborescence(WeightedGraph<V>,Arborescence<V>) : Optional<Pair<Edge<V>, Double>>",
        "ifCatch":false,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":0,
        "totalNum":1
    },{
        "id":"12345",
        "examId":4962,
        "caseId":2019,
        "nodeName":"branch-111-isAncestor(V,V,Arborescence<V>) : boolean",
        "ifCatch":true,
        "userIds":[99222],
        "category":"openclover-branch",
        "catchNum":1,
        "totalNum":1
    }]